package ports

import (
	"context"
	"github.com/chempik1234/L3.1-wb-tech-school/delayed_notifier/internal/models"
	"github.com/chempik1234/L3.1-wb-tech-school/delayed_notifier/pkg/types"
)

// NotificationCRUDStorageRepository is the CRUD-only Port for notifications 'DB' e.g. postgres or even in-memory list
type NotificationCRUDStorageRepository interface {
	// CreateNotification is the Create method of this DB CRUD
	//
	// uuid is generated by caller
	CreateNotification(ctx context.Context, notification *models.Notification) error

	// UpdateNotification is the Update method of this DB CRUD
	//
	// existing object's uuid is received from *models.Notification
	UpdateNotification(ctx context.Context, newData *models.Notification) error

	// DeleteNotification is the Delete method of this DB CRUD
	DeleteNotification(ctx context.Context, ID types.UUID) error

	// GetNotification is the Read method of this DB CRUD
	GetNotification(ctx context.Context, id types.UUID) (*models.Notification, error)
}

// NotificationCRUDCacheRepository is the CRUD-only Port for notifications 'Cache' e.g. redis or even in-memory map
type NotificationCRUDCacheRepository interface {
	// SaveNotification is both the Create and Update methods of this Cache CRUD
	SaveNotification(ctx context.Context, object *models.Notification) error

	// GetNotification is the Read method of this Cache CRUD
	GetNotification(ctx context.Context, id types.UUID) (*models.Notification, error)

	// DeleteNotification is the Delete method of this Cache CRUD
	DeleteNotification(ctx context.Context, id types.UUID) error
}
